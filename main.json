{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "4839667506724389901"
    }
  },
  "parameters": {
    "clusterName": {
      "type": "string",
      "defaultValue": "aks101clusterMM",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the Managed Cluster resource."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "maxValue": 1023,
      "minValue": 0,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 3,
      "maxValue": 50,
      "minValue": 1,
      "metadata": {
        "description": "The number of nodes for the cluster."
      }
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "[deployment().properties.templateLink.uri]",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access artifacts"
      }
    },
    "helmRepo": {
      "type": "string",
      "defaultValue": "azure-marketplace",
      "metadata": {
        "description": "Public Helm Repo Name"
      }
    },
    "helmRepoURL": {
      "type": "string",
      "defaultValue": "https://marketplace.azurecr.io/helm/v1/repo",
      "metadata": {
        "description": "Public Helm Repo URL"
      }
    },
    "helmApp": {
      "type": "string",
      "defaultValue": "azure-marketplace/wordpress",
      "metadata": {
        "description": "Public Helm App"
      }
    },
    "helmAppName": {
      "type": "string",
      "defaultValue": "my-wordpress",
      "metadata": {
        "description": "Public Helm App Name"
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "acr-maffe-maandag",
      "metadata": {
        "description": "The name of our container registry"
      }
    }
  },
  "variables": {
    "acrPullRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2022-01-31-preview",
      "name": "id-maffe-maandag",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2020-09-01",
      "name": "[parameters('clusterName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-maffe-maandag'))]": {}
        }
      },
      "properties": {
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": "[parameters('agentCount')]",
            "vmSize": "[parameters('agentVMSize')]",
            "osType": "Linux",
            "mode": "System"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-maffe-maandag')]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2022-02-01-preview",
      "name": "[parameters('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
      "name": "[guid(resourceGroup().id, resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), variables('acrPullRoleDefinitionId'))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2020-09-01').identityProfile.kubeletidentity.objectId]",
        "roleDefinitionId": "[variables('acrPullRoleDefinitionId')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "dns",
      "resourceGroup": "dns",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "kubeletidentityObjectId": {
            "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2020-09-01').identityProfile.kubeletidentity.objectId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "7317514902028164465"
            }
          },
          "parameters": {
            "kubeletidentityObjectId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "variables": {
            "dnsZoneContributorRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'befefa01-2a29-4197-83a8-272ff33ce314')]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Network/dnsZones/{0}', 'maffe-maandag.nl')]",
              "name": "[guid(resourceGroup().id, resourceId('Microsoft.Network/dnsZones', 'maffe-maandag.nl'), variables('dnsZoneContributorRoleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('kubeletidentityObjectId')]",
                "roleDefinitionId": "[variables('dnsZoneContributorRoleDefinitionId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "HelmScripts",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "helmRepo": {
            "value": "[parameters('helmRepo')]"
          },
          "helmRepoURL": {
            "value": "[parameters('helmRepoURL')]"
          },
          "helmApp": {
            "value": "[parameters('helmApp')]"
          },
          "helmAppName": {
            "value": "[parameters('helmAppName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "2797310109711112327"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location of all resources to be deployed"
              }
            },
            "_artifactsLocation": {
              "type": "string",
              "defaultValue": "[deployment().properties.templateLink.uri]",
              "metadata": {
                "description": "The base URI where artifacts required by this template are located"
              }
            },
            "_artifactsLocationSasToken": {
              "type": "secureString",
              "defaultValue": "",
              "metadata": {
                "description": "The sasToken required to access artifacts"
              }
            },
            "clusterName": {
              "type": "string",
              "defaultValue": ""
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "helmRepo": {
              "type": "string",
              "defaultValue": "azure-marketplace",
              "metadata": {
                "description": "Public Helm Repo Name"
              }
            },
            "helmRepoURL": {
              "type": "string",
              "defaultValue": "https://marketplace.azurecr.io/helm/v1/repo",
              "metadata": {
                "description": "Public Helm Repo URL"
              }
            },
            "helmApp": {
              "type": "string",
              "defaultValue": "azure-marketplace/wordpress",
              "metadata": {
                "description": "Public Helm App"
              }
            },
            "helmAppName": {
              "type": "string",
              "defaultValue": "my-wordpress",
              "metadata": {
                "description": "Public Helm App Name"
              }
            }
          },
          "variables": {
            "installScriptUri": "[uri(parameters('_artifactsLocation'), format('scripts/helm.sh{0}', parameters('_artifactsLocationSasToken')))]",
            "identityName": "[format('scratch{0}', uniqueString(resourceGroup().id))]",
            "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
            "roleAssignmentName": "[guid(variables('roleDefinitionId'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), resourceGroup().id)]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[variables('identityName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "name": "[variables('roleAssignmentName')]",
              "properties": {
                "roleDefinitionId": "[variables('roleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "customScript",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]": {}
                }
              },
              "properties": {
                "forceUpdateTag": "[parameters('utcValue')]",
                "azCliVersion": "2.10.1",
                "timeout": "PT30M",
                "environmentVariables": [
                  {
                    "name": "RESOURCEGROUP",
                    "secureValue": "[resourceGroup().name]"
                  },
                  {
                    "name": "CLUSTER_NAME",
                    "secureValue": "[parameters('clusterName')]"
                  },
                  {
                    "name": "HELM_REPO",
                    "secureValue": "[parameters('helmRepo')]"
                  },
                  {
                    "name": "HELM_REPO_URL",
                    "secureValue": "[parameters('helmRepoURL')]"
                  },
                  {
                    "name": "HELM_APP",
                    "secureValue": "[parameters('helmApp')]"
                  },
                  {
                    "name": "HELM_APP_NAME",
                    "secureValue": "[parameters('helmAppName')]"
                  }
                ],
                "primaryScriptUri": "[variables('installScriptUri')]",
                "cleanupPreference": "OnExpiration",
                "retentionInterval": "P1D"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAssignmentName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "kubeletIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2020-09-01').identityProfile.kubeletidentity.clientId]"
    },
    "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2020-09-01').fqdn]"
    }
  }
}